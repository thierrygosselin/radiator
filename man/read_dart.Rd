% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dart.R
\name{read_dart}
\alias{read_dart}
\title{Read and tidy \href{http://www.diversityarrays.com}{DArT} output files.}
\usage{
read_dart(
  data,
  strata,
  filename = NULL,
  tidy.dart = FALSE,
  calibrate.alleles = TRUE,
  verbose = TRUE,
  parallel.core = parallel::detectCores() - 1,
  ...
)
}
\arguments{
\item{data}{(file) 6 files formats used by DArT are recognized by radiator.
Don't modify the DArT file, to do this, use the \code{strata} file/argument below.
The function can import files ending with \code{.csv} or \code{.tsv}.

\enumerate{
\item \strong{1row}: Genotypes are in 1 row and coded (0, 1, 2, -).
\code{0 for 2 reference alleles REF/REF}, \code{1 for 2 alternate alleles ALT/ALT},
\code{2 for heterozygote REF/ALT}, \code{- for missing}.
\item \strong{2rows}: No genotypes. It's absence/presence, 0/1, of the REF and ALT alleles.
Sometimes called binary format.
\item \strong{counts}: No genotypes, It's counts/read depth for the REF and ALT alleles.
Sometimes just called count data. This should be the preferred file format,
because DArT output the coverage (read depth for each genotypes).
\item \strong{silico.dart}: SilicoDArT data. No genotypes, no REF or ALT alleles.
It's a file coded as absence/presence, 0/1, for the presence of sequence in
the clone id.
\item \strong{silico.dart.counts}: SilicoDArT data. No genotypes, no REF or ALT alleles.
It's a file coded as absence/presence, with counts for the presence of sequence in
the clone id.
\item \strong{dart.vcf}: For DArT VCFs, please use \code{\link{read_vcf}}.
}

If you encounter a problem, sent me your data so that I can update
the function.}

\item{strata}{A tab delimited file or object with a minimum of 3 columns headers:
\enumerate{
\item \strong{TARGET_ID}: generated by DArT, it's made of integers.
For \code{1row} and \code{2rows} the \code{TARGET_ID} is usually the sample
name submitted to DArT.


If this is new to you, take a look at this function:
\code{\link{extract_dart_target_id}}, it's easier than opening your DArT file
in \code{MS EXCEL}. This will extract the TARGET_ID of your DArT file
you can then use it inside \code{MS EXCEL} and build the remaining columns.


\item \strong{INDIVIDUALS}: This is the time and place no name your sample correctly.


\item \strong{STRATA}: refers to any grouping of individuals. Usually,
your sampling sites or populations. Keep it simple, 3 or 4 letters, like
TAS for Tasmania, etc.


Silico DArT data is currently used to detect sex markers, so the \code{STRATA}
column should be filed with sex information: \code{M} or \code{F}.
}}

\item{filename}{(optional) The function uses \code{\link[fst]{write.fst}},
to write the tidy data frame in
the working directory. The file extension appended to
the \code{filename} provided is \code{.rad}.
With default: \code{filename = NULL}, the tidy data frame is
in the global environment only (i.e. not written in the working directory...).}

\item{tidy.dart}{(logical, optional) Generate a tidy dataset.
Default:\code{tidy.dart = FALSE}.}

\item{calibrate.alleles}{(optional, logical)
Default: \code{calibrate.alleles = TRUE}.
Documented in \code{\link[radiator]{calibrate_alleles}}.}

\item{verbose}{(optional, logical) When \code{verbose = TRUE}
the function is a little more chatty during execution.
Default: \code{verbose = TRUE}.}

\item{parallel.core}{(optional) The number of core used for parallel
execution during import.
Default: \code{parallel.core = parallel::detectCores() - 1}.}

\item{...}{(optional) To pass further argument for fine-tuning the function.}
}
\value{
A radiator GDS file and tidy dataframe with several columns depending on DArT file:
\code{silico.dart:} A tibble with 5 columns: \code{CLONE_ID, SEQUENCE, VALUE, INDIVIDUALS, STRATA}.
This object is also saved in the directory (file ending with .rad).

Common to \code{1row, 2rows and counts}: A GDS file is automatically generated.
To have a tidy tibble, the argument \code{tidy.dart = TRUE} must be used.

\enumerate{
\item VARIANT_ID: generated by radiator and correspond the markers in integer.
\item MARKERS: generated by radiator and correspond to CHROM + LOCUS + POS separated by 2 underscores.
\item CHROM: the chromosome info, for de novo: CHROM_1.
\item LOCUS: the locus info.
\item POS: the SNP id on the LOCUS.
\item COL: the position of the SNP on the short read.
\item REF: the reference allele.
\item ALT: the alternate allele.
\item INDIVIDUALS: the sample name.
\item STRATA/POP_ID: populations id of the sample.
\item GT_BIN: the genotype based on the number of alternate allele in the genotype
(the count/dosage of the alternate allele). \code{0, 1, 2, NA}.
\item REP_AVG: the reproducibility average, output specific of DArT.
}
Other columns potentially in the tidy tibble:
\enumerate{
\item GT: the genotype in 6 digit format \emph{Ã  la genepop}.
\item GT_VCF: the genotype in VCF format \code{0/0, 0/1, 1/1, ./.}.
\item GT_VCF_NUC: the genotype in VCF format, but keeping the nucleotide information.
\code{A/A, A/T, T/T, ./.}
\item AVG_COUNT_REF: the coverage for the reference allele, output specific of DArT.
\item AVG_COUNT_SNP: the coverage for the alternate allele, output specific of DArT.
\item READ_DEPTH: the number of reads used for the genotype (count data).
\item ALLELE_REF_DEPTH: the number of reads of the reference allele (count data).
\item ALLELE_ALT_DEPTH: the number of reads of the alternate allele (count data).
}


Written in the working directory:
\itemize{
\item The radiator GDS file
\item The DArT metadata information
\item The tidy DArT data
\item The strata file associated with this tidy dataset
\item The allele dictionary is a tibble with columns:
\code{MARKERS, CHROM, LOCUS, POS, REF, ALT}.
}
}
\description{
Used internally in \href{https://github.com/thierrygosselin/radiator}{radiator}
and might be of interest for users. The function generate a GDS object/file
and optionally, a tidy dataset using
\href{http://www.diversityarrays.com}{DArT} files. Read the \emph{details} section
to understand why it's better than dartR.
}
\details{
More details on what is happening under the hood when you import the DArT file
in R:
\enumerate{
\item The DArT file is imported
\itemize{
\item DArT files should not be modify.
\item A lot of imports problems originates from files modifications,
a couple of common checks are done.
\item The format (1row, 2rows, counts, silico) is interpreted.
\item The number of target ids is checked.
}
\item The strata file file is imported:
\itemize{
\item This is the file that needs modifications.
\item This is here that you change the bad samples names.
\item Remove target ids (blacklist samples that you no longer want).
\item Change the order of the populations/sampling sites.
\item or alternatively, you can use the \code{pop.levels} argument
(see \emph{dots-dots-dots ...} in the advance mode section below)
}
\item The target ids between the DArT and strata files are verified and the files
are merged.
\item The data is inspected for duplicated names
\item DArT changed colnames in their files along the years, we tidy things:
\itemize{
\item colnames in camelcase are changed to snakecase
\item ALLELE_SEQUENCE is changed to SEQUENCE
\item TRIMMED_SEQUENCE is changed to SEQUENCE
\item CLUSTER_CONSENSUS_SEQUENCE is changed to SEQUENCE
\item Genomic metadata are named and or re-named based on the Variant Call Format Specification:CHROM, LOCUS, POS, COL, REF, ALT
}
\item With this function you have the option to tidy the DArT file:
\itemize{
\item What's that ?
\href{https://r4ds.hadley.nz/data-tidy.html}{R for Data Science: explanation}
\item It takes longer and you need more memory, but if you can allow it,
it's better for inspection and visualisation.
\item or you wait to filter the data and generate a tidy dataset with
\code{\link[radiator]{tidy_genomic_data}}
}
\item REF and ALT alleles are re-calibrated with \code{\link[radiator]{calibrate_alleles}}:
\itemize{
\item This is not optional
\item It takes longer than just reading the file like other software and packages, but
it's better.
}
}
}
\section{Advance mode}{


\emph{dots-dots-dots ...} allows to pass several arguments for fine-tuning the function:
\enumerate{
\item \code{whitelist.markers}: detailed in \code{\link[radiator]{filter_whitelist}}.
Defautl: \code{whitelist.markers = NULL}.
\item \code{missing.memory} (option, path)
This argument allows to erase genotypes that have bad statistics.
It's the path to a file \code{.rad} file that contains 3 columns:
\code{MARKERS, INDIVIDUALS, ERASE}. The file is produced by several radiator
functions. For DArT data, \code{\link[radiator]{filter_rad}} generate the file.
Defautl: \code{missing.memory = NULL}. Currently not used.
\item \code{path.folder}: (optional, path) To write output in a specific folder.
Default: \code{path.folder = NULL}. The working directory is used.
\item \code{pop.levels}: detailed in \code{\link[radiator]{tidy_genomic_data}}.
}
}

\examples{
\dontrun{
clownfish.dart.tidy <- radiator::read_dart(
    data = "clownfish.dart.csv",
    strata = "clownfish.strata.tsv"
    )
}
}
\seealso{
\code{\link{extract_dart_target_id}}
}
\author{
Thierry Gosselin \email{thierrygosselin@icloud.com}
}
