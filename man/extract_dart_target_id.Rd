% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dart.R
\name{extract_dart_target_id}
\alias{extract_dart_target_id}
\title{Extract \href{http://www.diversityarrays.com}{DArT} target id}
\usage{
extract_dart_target_id(data, write = TRUE, metadata = FALSE)
}
\arguments{
\item{data}{(file) 6 files formats used by DArT are recognized by radiator.
Don't modify the DArT file, to do this, use the \code{strata} file/argument below.
The function can import files ending with \code{.csv} or \code{.tsv}.

\enumerate{
\item \strong{1row}: Genotypes are in 1 row and coded (0, 1, 2, -).
\code{0 for 2 reference alleles REF/REF}, \code{1 for 2 alternate alleles ALT/ALT},
\code{2 for heterozygote REF/ALT}, \code{- for missing}.
\item \strong{2rows}: No genotypes. It's absence/presence, 0/1, of the REF and ALT alleles.
Sometimes called binary format.
\item \strong{counts}: No genotypes, It's counts/read depth for the REF and ALT alleles.
Sometimes just called count data. This should be the preferred file format,
because DArT output the coverage (read depth for each genotypes).
\item \strong{silico.dart}: SilicoDArT data. No genotypes, no REF or ALT alleles.
It's a file coded as absence/presence, 0/1, for the presence of sequence in
the clone id.
\item \strong{silico.dart.counts}: SilicoDArT data. No genotypes, no REF or ALT alleles.
It's a file coded as absence/presence, with counts for the presence of sequence in
the clone id.
\item \strong{dart.vcf}: For DArT VCFs, please use \code{\link{read_vcf}}.
}

If you encounter a problem, sent me your data so that I can update
the function.}

\item{write}{(logical) With default \code{write = TRUE}, the dart target id column is
written in a file in the working directory.}

\item{metadata}{(logical) With default \code{metadata = FALSE}, the dart
target id and the sample metadata are extracted from the dart file and converted
into a tidy data frame.
\itemize{
\item \code{DART_NUMBER}: The DArT order or service number
\item \code{DART_PLATE_BARCODE}: The DArT plate barcode
\item \code{CLIENT_BARCODE}: The client plate barcode if provided
\item \code{WELL_ROW}: The well row position (A, B, C, D, E, F, G, H)
\item \code{WELL_COL}: The well column position (1 to 12)
\item \code{SAMPLE_COMMENTS}: The client sample comment if provided
\item \code{TARGET_ID}: Depending on the DArT file type, the target id
generated by DArT or sample info provided by the client.
\item \code{IMPORTANT NOTE:} DArT is not consistent with the output = always
verify the columns.
}}
}
\value{
A tidy dataframe with a \code{TARGET_ID} column and metadata if requested.
For cleaning, the \code{TARGET_ID}
column is treated like the column \code{INDIVIDUALS}. Spaces and \code{,}
are removed, \code{_} and \code{:} are changed to a dash \code{-} and
UPPER case is used.
\href{https://thierrygosselin.github.io/radiator/reference/clean_ind_names.html}{see cleaning doc for logic behind this}.
}
\description{
Used internally in \href{https://github.com/thierrygosselin/radiator}{radiator}
and might be of interest for some users. The function allows to extract DArT
target id from a DArT file. To help prepare the appropriate STRATA file.
You can also decide if you want the samples metadata.
}
\examples{
\dontrun{
# Built a strata file:
strata <- radiator::extract_dart_target_id("mt.dart.file.csv") \%>\%
    dplyr::mutate(
        INDIVIDUALS = "new id you want to give",
        STRATA = "fill this"
    ) \%>\%
    readr::write_tsv(x = ., file = "my.new.dart.strata.tsv")
}
}
\author{
Thierry Gosselin \email{thierrygosselin@icloud.com}
}
